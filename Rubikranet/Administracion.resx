<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKioAAAEAIAAIHQAAFgAAACgAAAAqAAAAVAAAAAEAIAAAAAAAkBsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM73AADO9wAAzvcAAM73AADO9wAAzvkAiqlUANSW
        AADSlgAA0pYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAzvcAAM73AADO9wAAzvcAAM73AADO9wAAzvcAAM73CgDO9yUAzvkqi6lTCtSWABvSlgAA0pYAANKW
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO9wAAzvcAAM73AADO9wAAzvcAAM73AADO
        9wAAzvcMAM73KgDO91YAzveKAM73vQDO9+YAz/nEfqxiL9OWALXSlgBI0pYAANKWAADSlgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAM73AADO9wAAzvcAAM73AADO9wAAzvcAAM73AgDO9wsAzvcAAM73FgDO94YAzvfDAM735wDO
        9/sAzvf/AM73/wDO9/8Az/rPiKpXONOWAOXSlgDj0pYATtKWAADSlgAA0pYAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO9wAAzvcAAM73AADO
        9wAAzvcCAM73FADO9zYAzvdoAM73oADO97QAzvcdAM73SQDO9/wAzvf/AM73/wDO9/8Azvf/AM73/wDO
        9/8Az/rKlaZIO9OWAObSlgD/0pYA59KWAFfSlgAB0pYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO9wAAzvcAAM73KQDO92sAzvegAM73zwDO
        9+8Azvf/AM73/wDO9+0AzvcoAM73UgDO9/wAzvf/AM73/wDO9/8Azvf/AM73/wDO9/8Az/vGnqQ+PNOW
        AOnSlgD/0pYA/9KWAOXSlgAv0pYAANKWAADSlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO9wAAzvcIAM73swDO9/8Azvf/AM73/wDO9/8Azvf/AM73/wDO
        9+QAzvchAM73VwDO9/0Azvf/AM73/wDO9/8Azvf/AM73/wDO9/8Az/vCpaI0O9OWAOvSlgD/0pYA/9KW
        APvSlgBQ0pYADdKWAADSlgAA0pYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAADO9wAAzvcNAM73yQDO9/8Azvf/AM73/wDO9/8Azvf/AM73/wDO994AzvcbAM73XADO
        9/4Azvf/AM73/wDO9/8Azvf/AM73/wDO9/8Az/u+raArO9OWAOzSlgD/0pYA/9KWAPnSlgBe0pYAotKW
        AEnSlgAA0pYAANKWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO
        9wAAzvcRAM73zgDO9/8Azvf/AM73/wDO9/8Azvf/AM73/wDO99kAzvcVAM73YgDO9/8Azvf/AM73/wDO
        9/8Azvf/AM73/wDO9/8Az/u8tZ4iOtKWAO7SlgD/0pYA/9KWAPjSlgBg0pYA2NKWAObSlgBT0pYAANKW
        AADSlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO9wAAzvcXAM731QDO
        9/8Azvf/AM73/wDO9/8Azvf/AM73/wDO99UAzvcQAM73ZwDO9/8Azvf/AM73/wDO9/8Azvf/AM739wDO
        9+AAz/t5x5kMH9KWANHSlgD/0pYA/9KWAPbSlgBi0pYA2dKWAP/SlgDq0pYAW9KWAAHSlgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO9wAAzvcbAM732gDO9/8Azvf/AM73/wDO
        9/8Azvf/AM73/wDO99MAzvcOAM73bADO9/8AzvfzAM731wDO96wAzvd4AM73RQDO9xwAzvgCpaI0ANKW
        ADvSlgDR0pYA/9KWAPXSlgBi0pYA29KWAP/SlgD/0pYA2tKWAB3SlgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO9wAAzvccAM733ADO9/8Azvf/AM73/wDO9/8Azvf/AM73/gDO
        96wAzvcHAM73LgDO92kAzvc7AM73FQDO9wEAzvcBAM73FQDO9zoAz/swy5gJD9KWAB/SlgAs0pYAwdKW
        APXSlgBh0pYA3dKWAP/SlgD/0pYA69KWACnSlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAADO9wAAzvcgAM734wDO9/8Azvf4AM733wDO97kAzveHAM73UwDO9xkAzvcAAM73AADO
        9wUAzvceAM73RgDO93cAzverAM731gDO9/YAz/yuwJsVP9KWAMvSlgBF0pYAH9KWAKDSlgBc0pYA3tKW
        AP/SlgD/0pYA6tKWACnSlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO
        9wAAzvcXAM73kADO930AzvdHAM73HQDO9wUAzvcCAM73FgDO9xkAzvcAAM73NwDO97cAzvfgAM739wDO
        9/8Azvf/AM73/wDO9/8Az/y2vpsYRdKWAPjSlgDl0pYAVdKWAAvSlgAr0pYA4tKWAP/SlgD/0pYA6tKW
        ACnSlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO9wAAzvcAAM73AADO
        9wcAzvcgAM73SQDO93sAzvetAM732gDO954AzvcAAM73ewDO9/8Azvf/AM73/wDO9/8Azvf/AM73/wDO
        9/8Az/yzwJsVR9KWAPbSlgD/0pYA7dKWAGLSlgAS0pYAvtKWAP/SlgD/0pYA6tKWACnSlgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO9wAAzvcWAM73gwDO974AzvfiAM73+ADO
        9/8Azvf/AM73/wDO968AzvcAAM73gADO9/8Azvf/AM73/wDO9/8Azvf/AM73/wDO9/8Az/yywZoUStKW
        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
        vF8jB7xAIwe8OCMHvDgXAMkP250AN9KWAMzSlgD/0pYA6tKWACjSlgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACMHvAAjB7wAIwe8BCMHvFQjB7zXIwe8/yMHvP8jB7z/Iwe8/yMH
        vP8jB7z/Iwe8/SMHvOkjB7xvIwe8ACMHvCQjB7xbIwe8RSMHvDUjB7w9Iwe8XSMHvIsjB7y2Iwe83iMH
        vPMjB7y0FwDJLt6fACTSlgC30pYA69KWACnSlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACMHvAAjB7wAIwe8ACMHvAAjB7wrIwe8ryMHvPojB7z0Iwe82SMHvLIjB7yFIwe8XCMH
        vEMjB7w/Iwe8SyMHvCUjB7wAIwe8YiMHvNUjB7zvIwe8/SMHvP8jB7z/Iwe8/yMHvP8jB7z/Iwe82hwB
        w0nUmAAZ0pYAftKWAB7SlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIwe8ACMHvAAjB7wAIwe8ECMHvE8jB7xPIwe8USMHvF8jB7x/Iwe8pyMHvMwjB7zpIwe8+iMH
        vNgjB7xXIwe8HyMHvJUjB7z4Iwe8/yMHvP8jB7z/Iwe8/yMHvP8jB7z/Iwe8/yMHvOkgBL9PAAD/AN6g
        AAHSlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMH
        vAAjB7wAIwe8ACMHvAAjB7wuIwe8ziMHvP8jB7z/Iwe8/yMHvP8jB7z/Iwe8/yMHvP8jB7zzIwe8hCMH
        vBgjB7xnIwe86CMHvP8jB7z/Iwe89SMHvN8jB7y9Iwe8lCMHvGwjB7wvAAD/AHtPXgDSlgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwe8ACMH
        vAAjB7wBIwe8OyMHvMAjB7z/Iwe8/yMHvP8jB7z/Iwe8/yMHvP8jB7z/Iwe88CMHvHwjB7wDIwe8QiMH
        vI0jB7xuIwe8QSMHvCAjB7wKIwe8ACMHvAAjB7wAIwe8ACMHvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMHvAAjB7wAIwe8ACMH
        vBgjB7yQIwe87CMHvO4jB7zYIwe8tiMHvIwjB7xhIwe8OiMHvBojB7wBIwe8ACMHvAAjB7wAIwe8ACMH
        vAAjB7wAIwe8ACMHvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjB7wAIwe8ACMHvAAjB7wGIwe8MCMH
        vDEjB7waIwe8ByMHvAAjB7wAIwe8ACMHvAAjB7wAIwe8ACMHvAAjB7wAIwe8AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwe8ACMHvAAjB7wAIwe8ACMHvAAjB7wAIwe8ACMH
        vAAjB7wAIwe8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////8AAAP//////wAAA///////A
        AAD//////8AAAP//4Af/wAAA//4AA//AAAD/4AAB/8AAAP4AAAD/wAAA+AAAAP/AAAD4AAAAP8AAAPgA
        AAAfwAAA+AAAAA/AAAD4AAAAB8AAAPgAAAAHwAAA+AAAAAfAAAD4AAAAB8AAAPgAAAAHwAAA+AAAAAfA
        AAD4AAAAB8AAAPgAAAAHwAAA+AAAAAfAAAD4AAAAB8AAAPgAAAAHwAAA+AAAAAfAAADwAAAAB8AAAPAA
        AAAHwAAA8AAAAAfAAADwAAAAB8AAAPAAAAAHwAAA+AAAAAfAAAD4AAAAB8AAAPgAAAAHwAAA/gAAAAfA
        AAD/AAAAB8AAAP/AAAAPwAAA/+AAAH/AAAD/8AAH/8AAAP/4Af//wAAA///////AAAD//////8AAAP//
        ////wAAA///////AAAA=
</value>
  </data>
</root>