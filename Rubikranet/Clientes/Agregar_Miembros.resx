<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancelar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAASnSURBVHhe7ZuxThwxEIZ5hDwCj8Aj8AKREkIgEAKH
        gCoFVBHliTINTerQ0iGljkSFUqLUKZCQUpNEIlKkKJv5Vrblc7xw5/V6vcS/9Fd3Gs/8Ox57x965goKC
        goKCghA8frq0eAcX1N/+D0jA88ID4ZnwSlhNyUvhiXAkfKTMPQwQkBBRCNIXfAgReKSGGCYkALKFp34j
        nAhwdelZ9WZltXr/cqP6sLlZfRqNvDzdeFW9W1+v/+vaUCQLx8LhZBXOKqcnhEEUgiXwm729mfl1d7f6
        uLVVvV1bswXSRKgnyoV8IU4uKGeN89vLy3WW+IIOJWKRfYhujyU8F+aZTeIYdcY424UwLhuEInMXlVt5
        QByi1hgnmUo47wuqC37Z2fHVqf6LuDhBvSGta6d4ktQJXxApSDZpXxSPlav9QBww4rx+vlJ93t72Op6S
        PCBnyo2Vu2khA5tphTgpp9R95EE5IqWdbjKgKci5iaPpESnNawsD6UFxIIdp1URWUe2rkO1H91sANVA9
        aJ8F2ebP09Pq2/6+9zdWVO2v8ESF0Q1kAHbI9WAM7HMoNX9dXFTg9/V1o0iUAe23sJs9khjm3ap+fWAT
        mEPd0eKAP7e31ffDQ+//KANKHHipQooLMWxWra53yNPQFefH0ZH3f5rOO1zcVU0MsiE02eNzICVnFQey
        21biwHMVWhyIQbOs9509IeJoOlkUb9kXY3Wzi2XdN3AqthEHOrUozmuIGKI410b7XLnaiqNprWhXKsR2
        EENmeoU2u9oyljjQeaFtP83ECP3f3qZXTHGgM80OVJjhECP1zpl+i2/ALhlbHE1LoPY7a22M1PQN1hW7
        EgdazbV2y70Y4PCuNpZyee9SHGgv9yrUMNgCpSrQXYsD7UKtQg1DaoFSiAMHKVAqceDgBEopDhyUQKnF
        gYMRqA9xYEyBTP+ZiwS+wULZlzhwvPpCC3SjQg2HFijmi2qf4kDrhbV9X0iM1K2OWK8afYsDlTiwfctD
        jJhWa9s+dA7icBKj4xG2b71iRBtsc8yTgzjQOQaaV2GGQ4zQj64N8g7jG/Q+5iIOpKeu4ol3uiHG6p4Q
        nHWa5SSOM73a94I0xJiZZuwhfIP7mJM40LlD1H562RCDdeOMzuI0WZSbOGx0LXHiH0GLUXPsfF8W5SYO
        dLIn/vGzGKVYmyziIM7nCBcJNHIRx6k9Zyqk+BDjphY1bRy5QMBFglzEoRzwQJXfnA7HrT0uZABz7a5p
        qiFS00WC1HSmVvfX8WQQc04Pc7kj5KOzKYx7Hn8XZDDTBiF9c7xl5twu44GmvWAuA5p6lJtIHnH6+axK
        Bj7WjiBSDveGnGkF+/2GQxww+yPY1wUHViunIJM5eXzgIo6Y6QZpSKWcciwU1lKuxcnra0UcEpobsJC3
        /6YNZQzy+uBkDcz6ix+2ABMftkCEiplRZIxHGLKmn88OZoU4yjbgn08wmXpsLkPEQhTqm9XPsUk7ptsd
        chcQp6lNZuftkiwguxDNR04fnDvOLsnWvL4NC4EEQX1iSzBRowJJZnLrbXgZMw0kMMQiQJ5+Y3YpUlf4
        D+KSjQ9TlIKCgoKCgoKCgiFibu4vUXcvtgxsPvYAAAAASUVORK5CYII=
</value>
  </data>
</root>